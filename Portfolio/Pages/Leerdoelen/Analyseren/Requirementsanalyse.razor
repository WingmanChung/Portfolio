@page "/Leerdoelen/Analyseren/Requirementsanalyse"
<br />
<br />
<h1>Competentie II: Analyseren</h1><br />

<h2>Leerdoel 2: Requirementsanalyse </h2><br />

<p>“Ik wil na afloop van mijn 3e jaar stage in staat zijn om een requirementsanalyse uit te voeren voor een reporting engine met verschillende belanghebbenden.”</p><br />

<h3>Inleiding</h3>
<p>
    Deze pagina beschrijft de requirementsanalyse die ik heb uitgevoerd tijdens mijn stage. Dit heb ik samen met Wing Yee Chung (die ook bij Ranshuijsen BV stageloopt) gedaan.
    We hebben ieder een lijst met interviewvragen opgesteld en deze uiteindelijk samengevoegd. Vervolgens hebben we met de gecombineerde vragenlijst interviews gehouden om requirements
    te verzamelen en uiteindelijk te prioriteren met behulp van de MoSCoW methode. De requirements en probleemanalyse zijn uiteindelijk samengevoegd in een requirementsanalyse document.
    Hieronder geef ik per bovengenoemde taak een kort beschrijving.
</p>
<br />

<h5>Interviews</h5>
<p>
    Allereerst ben ik begonnen met het opstellen van interviewvragen. Hierbij hield ik rekening met het doel van de interviews 'wat moet ik minimaal weten na het gesprek?'. De eerste paar vragen gaan over
    de huidige rapportagetool (Wat zijn de problemen? Welke functionaliteiten zou je terug willen zien in de nieuwe rapportagetool? etc.). Vervolgens gaan de vragen over de gewenste requirements voor
    de nieuwe rapportagetool (Welke functionaliteiten, die niet in de huidige rapportagetool zitten, zijn er gewenst? etc.). Uiteindelijk heb ik mijn vragen met de vragen van Wing Yee gecombineerd 
    om te kijken welke vragen nog ontbraken.
    <br /><br />
    Zodra de vragenlijst compleet was, zijn we begonnen met de interviews. Tijdens de interviews heb ik ook met behulp van de 6W methode vragen gesteld om later een probleemanalyse op te stellen (zie Bewijslast I). 
    Voor het opstellen van een probleemanalyse heb ik de 6W methode gebruikt zodat ik meer inzicht kreeg in de wensen van de klant. De 6W vragen waren daarnaast ook makkelijk te verwerken in de interviewvragen en gaf het me 
    ruimte om eventueel door te kunnen vragen. De opgestelde probleemanalyse geeft een goed beeld van de problemen bij de huidige rapportagetool en helpt met het zoeken naar een geschikte oplossing. 
    De probleemanalyse en de verzamelde requirements hebben we uiteindelijk toegevoegd aan het requirementsanalyse document.
</p>
<br />

<h5>Requirements opstellen</h5>
<p>
    De requirements die we met behulp van de antwoorden van de geïnterviewden hebben verzameld, zijn verdeeld tussen Functional &amp; Non-Functional requirements. Functional requirements beschrijven wat een systeem zou 
    moeten doen en Non-Functional requirements beschrijven hoe het systeem de Functional requirements kan vervullen. Met behulp van de MoSCoW methode hebben we de requirements geprioriteerd.
    MoSCoW staat voor (Must)o(Should)(Could)o(Would). Must requirements zijn requirements waaraan het systeem moet voldoen, should is wanneer het systeem aan de requirements zou moeten voldoen, could is wanneer het systeem 
    aan de requirements kan voldoen en would is wanneer het systeem aan de requirements wou kunnen voldoen. Must requirements moet je binnen een bepaalde tijd afronden en would requirements hoef je niet af te hebben binnen 
    een bepaalde tijd. Om de prioriteiten eenvoudig en snel te kunnen zien, hebben we achter de requirements een kolom gemaakt voor de kleuren om MoSCoW duidelijk te maken (zie Bewijslast II).
</p>
<br />

<h3>Bewijs</h3>

<h5>Bewijslast I</h5>
<p class="description">Hieronder zie je de probleemanalyse die ik heb opgesteld voor de huidige rapportagetool van Ranshuijsen BV.</p>
<img src="images/Probleemanalyse.jpg"/>
<br /><br />
<h5>Bewijslast II (optioneel)</h5>
Toelichting bewijslast II<br />
<br />

<h3>Feedback</h3>
Feedback van bedrijfsbegeleider/collega<br />
<br />

<h3>Reflectie</h3>
Reflectie op feedback van bedrijfsbegeleider/collega<br />
•	Welke feedback heb je verkregen?<br />
•	Wat heb je van deze feedback geleerd?<br />
•	Wat heb je met de feedback gedaan?<br />
•	Wat zou je een volgende keer anders doen?<br />
•	Uiteraard kun je hier zelf verdere invulling aan geven in overleg met je stagedocent.<br />

<br />
@code {

}
